From 3207cbd40dc03460222fcec5953dd0acc37de3ae Mon Sep 17 00:00:00 2001
From: Guilhem Saurel <guilhem.saurel@laas.fr>
Date: Tue, 16 Mar 2021 16:59:45 +0100
Subject: [PATCH] =?UTF-8?q?curves=20=E2=86=92=20ndcurves?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

ref https://github.com/loco-3d/ndcurves/pull/58
---
 CMakeLists.txt                                         |  1 +
 include/hpp/rbprm/interpolation/polynom-trajectory.hh  |  4 ++--
 include/hpp/rbprm/interpolation/spline/bezier-path.hh  |  4 ++--
 include/hpp/rbprm/interpolation/spline/effector-rrt.hh | 10 +++++-----
 src/CMakeLists.txt                                     |  2 +-
 src/interpolation/effector-rrt.cc                      |  4 ++--
 6 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c213720..f839a66 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -43,6 +43,7 @@ ADD_PROJECT_DEPENDENCY("hyq-rbprm" REQUIRED)
 ADD_PROJECT_DEPENDENCY("simple-humanoid-rbprm" REQUIRED)
 ADD_PROJECT_DEPENDENCY("talos-rbprm" REQUIRED)
 ADD_PROJECT_DEPENDENCY("example-robot-data" REQUIRED)
+ADD_PROJECT_DEPENDENCY("ndcurves" REQUIRED)
 
 if(OPENMP_FOUND)
   message("OPENMP FOUND")
diff --git a/include/hpp/rbprm/interpolation/polynom-trajectory.hh b/include/hpp/rbprm/interpolation/polynom-trajectory.hh
index d6d95ea..a207fc1 100644
--- include/hpp/rbprm/interpolation/polynom-trajectory.hh
+++ include/hpp/rbprm/interpolation/polynom-trajectory.hh
@@ -23,14 +23,14 @@
 #include <hpp/core/config.hh>
 #include <hpp/core/path.hh>
 #include <hpp/rbprm/interpolation/time-dependant.hh>
-#include <curves/curve_abc.h>
+#include <ndcurves/curve_abc.h>
 
 namespace hpp {
 namespace rbprm {
 namespace interpolation {
 HPP_PREDEF_CLASS(PolynomTrajectory);
 typedef boost::shared_ptr<PolynomTrajectory> PolynomTrajectoryPtr_t;
-typedef curves::curve_abc<core::value_type, core::value_type, true, Eigen::Vector3d> Polynom;
+typedef ndcurves::curve_abc<core::value_type, core::value_type, true, Eigen::Vector3d> Polynom;
 typedef boost::shared_ptr<Polynom> PolynomPtr_t;
 /// Linear interpolation between two configurations
 ///
diff --git a/include/hpp/rbprm/interpolation/spline/bezier-path.hh b/include/hpp/rbprm/interpolation/spline/bezier-path.hh
index 87ce090..fe81e33 100644
--- include/hpp/rbprm/interpolation/spline/bezier-path.hh
+++ include/hpp/rbprm/interpolation/spline/bezier-path.hh
@@ -19,7 +19,7 @@
 #ifndef HPP_RBPRM_BEZIER_PATH_HH
 #define HPP_RBPRM_BEZIER_PATH_HH
 
-#include <curves/bezier_curve.h>
+#include <ndcurves/bezier_curve.h>
 #include <hpp/core/path.hh>
 #include <vector>
 #include <map>
@@ -27,7 +27,7 @@
 namespace hpp {
 namespace rbprm {
 
-typedef curves::bezier_curve<double, double, true, Eigen::Vector3d> bezier_t;
+typedef ndcurves::bezier_curve<double, double, true, Eigen::Vector3d> bezier_t;
 typedef boost::shared_ptr<bezier_t> bezier_Ptr;
 HPP_PREDEF_CLASS(BezierPath);
 typedef boost::shared_ptr<BezierPath> BezierPathPtr_t;
diff --git a/include/hpp/rbprm/interpolation/spline/effector-rrt.hh b/include/hpp/rbprm/interpolation/spline/effector-rrt.hh
index 0431b56..26ffcf4 100644
--- include/hpp/rbprm/interpolation/spline/effector-rrt.hh
+++ include/hpp/rbprm/interpolation/spline/effector-rrt.hh
@@ -32,9 +32,9 @@
 #include <hpp/core/problem.hh>
 #include <hpp/core/config-projector.hh>
 #include <hpp/rbprm/interpolation/spline/bezier-path.hh>
-#include <curves/exact_cubic.h>
-#include <curves/bezier_curve.h>
-#include <curves/curve_constraint.h>
+#include <ndcurves/exact_cubic.h>
+#include <ndcurves/bezier_curve.h>
+#include <ndcurves/curve_constraint.h>
 #include <vector>
 #include <map>
 
@@ -123,8 +123,8 @@ std::vector<core::PathVectorPtr_t> fitBeziersToPath(RbPrmFullBodyPtr_t fullbody,
                                                     const value_type comPathLength, const PathPtr_t fullBodyComPath,
                                                     const State& startState, const State& nextState);
 
-typedef curves::exact_cubic<double, double, true, Eigen::Matrix<value_type, 3, 1> > exact_cubic_t;
-typedef curves::curve_constraints<Eigen::Matrix<value_type, 3, 1> > curve_constraint_t;
+typedef ndcurves::exact_cubic<double, double, true, Eigen::Matrix<value_type, 3, 1> > exact_cubic_t;
+typedef ndcurves::curve_constraints<Eigen::Matrix<value_type, 3, 1> > curve_constraint_t;
 typedef boost::shared_ptr<exact_cubic_t> exact_cubic_Ptr;
 
 struct SetEffectorRRTConstraints {
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 024fb9a..a77739b 100644
--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -84,7 +84,7 @@ PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} hpp-statistics)
 PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} hpp-constraints)
 PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} hpp-fcl)
 PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} hpp-pinocchio)
-PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} curves)
+PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} ndcurves)
 PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} pinocchio)
 
 INSTALL(TARGETS ${LIBRARY_NAME} DESTINATION lib)
diff --git a/src/interpolation/effector-rrt.cc b/src/interpolation/effector-rrt.cc
index a155e0b..9fd2c55 100644
--- src/interpolation/effector-rrt.cc
+++ src/interpolation/effector-rrt.cc
@@ -26,8 +26,8 @@
 #include <hpp/constraints/generic-transformation.hh>
 #include <hpp/bezier-com-traj/solve_end_effector.hh>
 #include <hpp/core/problem-solver.hh>
-#include <curves/helpers/effector_spline.h>
-#include <curves/bezier_curve.h>
+#include <ndcurves/helpers/effector_spline.h>
+#include <ndcurves/bezier_curve.h>
 #include <hpp/pinocchio/joint-collection.hh>
 
 namespace hpp {
